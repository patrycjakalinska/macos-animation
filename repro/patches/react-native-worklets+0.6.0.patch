diff --git a/node_modules/react-native-worklets/apple/worklets/apple/AnimationFrameQueue.mm b/node_modules/react-native-worklets/apple/worklets/apple/AnimationFrameQueue.mm
index 6d9f323..f7b76ef 100644
--- a/node_modules/react-native-worklets/apple/worklets/apple/AnimationFrameQueue.mm
+++ b/node_modules/react-native-worklets/apple/worklets/apple/AnimationFrameQueue.mm
@@ -6,6 +6,7 @@
 #import <chrono>
 
 #import <React/RCTAssert.h>
+#import <QuartzCore/CADisplayLink.h>
 
 constexpr auto TIME_SAMPLES_AMOUNT = 4;
 
@@ -34,7 +35,15 @@ - (instancetype)init
 {
   AssertJavaScriptQueue();
   if constexpr (worklets::StaticFeatureFlags::getFlag("IOS_DYNAMIC_FRAMERATE_ENABLED")) {
-    bool supportsProMotion = [UIScreen mainScreen].maximumFramesPerSecond > 60;
+      bool supportsProMotion = false;
+         #if TARGET_OS_OSX
+         NSScreen *screen = [NSScreen mainScreen];
+         if (screen) {
+             supportsProMotion = (screen.maximumFramesPerSecond > 60);
+         }
+         #else
+         supportsProMotion = [UIScreen mainScreen].maximumFramesPerSecond > 60;
+         #endif // TARGET_OS_OSX
     SEL frameCallback = supportsProMotion ? @selector(executeQueueForProMotion:) : @selector(executeQueue:);
     currentFrameRate_ = supportsProMotion ? FrameRateRange::BEST : FrameRateRange::STANDARD;
     displayLink_ = [WorkletsDisplayLink displayLinkWithTarget:self selector:frameCallback];
@@ -120,7 +129,9 @@ - (void)executeQueueForProMotion:(WorkletsDisplayLink *)displayLink
     frameRateRange = FrameRateRange::POOR;
   }
   if (currentFrameRate_.preferred != frameRateRange.preferred) {
+#if !TARGET_OS_OSX
     displayLink_.preferredFrameRateRange = frameRateRange;
+#endif
     currentFrameRate_ = frameRateRange;
   }
 }
